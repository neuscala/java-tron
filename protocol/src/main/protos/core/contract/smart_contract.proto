syntax = "proto3";

package protocol;

option java_package = "org.tron.protos.contract"; //Specify the name of the package that generated the Java file
//option java_outer_classname = "CreateSmartContract"; //Specify the class name of the generated Java file
option go_package = "github.com/tronprotocol/grpc-gateway/core";

import "core/Tron.proto";

message SmartContract {
  message ABI {
    message Entry {
      enum EntryType {
        UnknownEntryType = 0;
        Constructor = 1;
        Function = 2;
        Event = 3;
        Fallback = 4;
        Receive = 5;
        Error = 6;
      }
      message Param {
        bool indexed = 1;
        string name = 2;
        string type = 3;
        // SolidityType type = 3;
      }
      enum StateMutabilityType {
        UnknownMutabilityType = 0;
        Pure = 1;
        View = 2;
        Nonpayable = 3;
        Payable = 4;
      }

      bool anonymous = 1;
      bool constant = 2;
      string name = 3;
      repeated Param inputs = 4;
      repeated Param outputs = 5;
      EntryType type = 6;
      bool payable = 7;
      StateMutabilityType stateMutability = 8;
    }
    repeated Entry entrys = 1;
  }
  bytes origin_address = 1;
  bytes contract_address = 2;
  ABI abi = 3;
  bytes bytecode = 4;
  int64 call_value = 5;
  int64 consume_user_resource_percent = 6;
  string name = 7;
  int64 origin_energy_limit = 8;
  bytes code_hash = 9;
  bytes trx_hash = 10;
  int32 version = 11;
}

message ContractState {
  int64 energy_usage = 1;
  int64 energy_factor = 2;
  int64 update_cycle = 3;
  int64 energy_usage_total = 4;
  int64 energy_usage_failed = 5;
  int64 energy_penalty_total = 6;
  int64 energy_penalty_failed = 7;
  int64 trx_burn = 8;
  int64 trx_penalty = 9;
  int64 tx_total_count = 10;
  int64 tx_failed_count = 11;
  int64 transfer_count = 12;
  int64 transfer_from_count = 13;
  int64 transfer_fee = 14;
  int64 transfer_from_fee = 15;
  int64 transfer_energy_usage = 16;
  int64 transfer_energy_penalty = 17;
  int64 transfer_from_energy_usage = 18;
  int64 transfer_from_energy_penalty = 19;
  int64 transfer_new_energy_usage = 20;
  int64 transfer_from_new_energy_usage = 21;
  // transfer
  int64 ts_from_count = 22;
  int64 ts_to_count = 23;
  int64 ts_from_fee = 24;
  int64 ts_to_fee = 25;
  int64 ts_from_energy_usage = 26;
  int64 ts_to_energy_usage = 27;
  int64 ts_from_energy_usage_total = 28;
  int64 ts_to_energy_usage_total = 29;
  // transfer from
  int64 tsf_from_count = 30;
  int64 tsf_to_count = 31;
  int64 tsf_from_fee = 32;
  int64 tsf_to_fee = 33;
  int64 tsf_from_energy_usage = 34;
  int64 tsf_to_energy_usage = 35;
  int64 tsf_from_energy_usage_total = 36;
  int64 tsf_to_energy_usage_total = 37;
  // caller and trigger
  int64 caller_count = 38;
  int64 trigger_to_count = 39;
  int64 caller_fee = 40;
  int64 trigger_to_fee = 41;
  int64 caller_energy_usage = 42;
  int64 trigger_to_energy_usage = 43;
  int64 caller_energy_usage_total = 44;
  int64 trigger_to_energy_usage_total = 45;
  // transfer amount classify
  // <= 1
  int64 ts_small_from_count = 46;
  int64 ts_small_to_count = 47;
  int64 ts_small_from_fee = 48;
  int64 ts_small_to_fee = 49;
  int64 ts_small_from_energy_usage = 50;
  int64 ts_small_to_energy_usage = 51;
  int64 ts_small_from_energy_usage_total = 52;
  int64 ts_small_to_energy_usage_total = 53;
  // > 1 && <= 10
  int64 ts_1to10_from_count = 54;
  int64 ts_1to10_to_count = 55;
  int64 ts_1to10_from_fee = 56;
  int64 ts_1to10_to_fee = 57;
  int64 ts_1to10_from_energy_usage = 58;
  int64 ts_1to10_to_energy_usage = 59;
  int64 ts_1to10_from_energy_usage_total = 60;
  int64 ts_1to10_to_energy_usage_total = 61;
  // > 10 && <= 100
  int64 ts_10to100_from_count = 62;
  int64 ts_10to100_to_count = 63;
  int64 ts_10to100_from_fee = 64;
  int64 ts_10to100_to_fee = 65;
  int64 ts_10to100_from_energy_usage = 66;
  int64 ts_10to100_to_energy_usage = 67;
  int64 ts_10to100_from_energy_usage_total = 68;
  int64 ts_10to100_to_energy_usage_total = 69;
  // > 100 && <= 1,000
  int64 ts_100to1000_from_count = 70;
  int64 ts_100to1000_to_count = 71;
  int64 ts_100to1000_from_fee = 72;
  int64 ts_100to1000_to_fee = 73;
  int64 ts_100to1000_from_energy_usage = 74;
  int64 ts_100to1000_to_energy_usage = 75;
  int64 ts_100to1000_from_energy_usage_total = 76;
  int64 ts_100to1000_to_energy_usage_total = 77;
  // > 1,000 && <= 10,000
  int64 ts_1000to10000_from_count = 78;
  int64 ts_1000to10000_to_count = 79;
  int64 ts_1000to10000_from_fee = 80;
  int64 ts_1000to10000_to_fee = 81;
  int64 ts_1000to10000_from_energy_usage = 82;
  int64 ts_1000to10000_to_energy_usage = 83;
  int64 ts_1000to10000_from_energy_usage_total = 84;
  int64 ts_1000to10000_to_energy_usage_total = 85;
  // > 10,000
  int64 ts_big_from_count = 86;
  int64 ts_big_to_count = 87;
  int64 ts_big_from_fee = 88;
  int64 ts_big_to_fee = 89;
  int64 ts_big_from_energy_usage = 90;
  int64 ts_big_to_energy_usage = 91;
  int64 ts_big_from_energy_usage_total = 92;
  int64 ts_big_to_energy_usage_total = 93;
  // temp cache
  int64 ts_small_from_new_count = 94;
  int64 ts_1To10_from_new_count = 95;
  int64 ts_10To100_from_new_count = 96;
  int64 ts_100To1000_from_new_count = 97;
  int64 ts_1000To10000_from_new_count = 98;
  int64 ts_big_from_new_count = 99;
  int64 ts_small_to_new_count = 100;
  int64 ts_1To10_to_new_count = 101;
  int64 ts_10To100_to_new_count = 102;
  int64 ts_100To1000_to_new_count = 103;
  int64 ts_1000To10000_to_new_count = 104;
  int64 ts_big_to_new_count = 105;
  // new
  int64 trigger_small_count = 106;
  int64 trigger_small_fee = 107;
  int64 trigger_small_energy_usage = 108;
  int64 trigger_big_count = 109;
  int64 trigger_big_fee = 110;
  int64 trigger_big_energy_usage = 111;
  int64 trigger_05_to_1_count = 112;
  int64 trigger_05_to_1_fee = 113;
  int64 trigger_05_to_1_energy_usage = 114;
  int64 trigger_1_to_10_count = 115;
  int64 trigger_1_to_10_fee = 116;
  int64 trigger_1_to_10_energy_usage = 117;
  int64 trigger_10_to_100count = 118;
  int64 trigger_10_to_100_fee = 119;
  int64 trigger_10_to_100_energy_usage = 120;
  int64 trigger_100_to_1000_count = 121;
  int64 trigger_100_to_1000_fee = 122;
  int64 trigger_100_to_1000_energy_usage = 123;
  int64 trigger_1000_to_10000_count = 124;
  int64 trigger_1000_to_10000_fee = 125;
  int64 trigger_1000_to_10000_energy_usage = 126;
}

message CreateSmartContract {
  bytes owner_address = 1;
  SmartContract new_contract = 2;
  int64 call_token_value = 3;
  int64 token_id = 4;
}

message TriggerSmartContract {
  bytes owner_address = 1;
  bytes contract_address = 2;
  int64 call_value = 3;
  bytes data = 4;
  int64 call_token_value = 5;
  int64 token_id = 6;
}

message ClearABIContract {
  bytes owner_address = 1;
  bytes contract_address = 2;
}

message UpdateSettingContract {
  bytes owner_address = 1;
  bytes contract_address = 2;
  int64 consume_user_resource_percent = 3;
}

message UpdateEnergyLimitContract {
  bytes owner_address = 1;
  bytes contract_address = 2;
  int64 origin_energy_limit = 3;
}

message SmartContractDataWrapper {
  SmartContract smart_contract = 1;
  bytes runtimecode = 2;
  ContractState contract_state = 3;
}